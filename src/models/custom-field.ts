/* tslint:disable */
/* eslint-disable */
/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FilterLogic } from './filter-logic';
import { Type7 } from './type7';

/**
 * 
 * @export
 * @interface CustomField
 */
export interface CustomField {
    /**
     * 
     * @type {number}
     * @memberof CustomField
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CustomField
     */
    url?: string;
    /**
     * 
     * @type {Set<string>}
     * @memberof CustomField
     */
    content_types: Set<string>;
    /**
     * 
     * @type {Type7}
     * @memberof CustomField
     */
    type: Type7;
    /**
     * Internal field name
     * @type {string}
     * @memberof CustomField
     */
    name: string;
    /**
     * Name of the field as displayed to users (if not provided, the field\'s name will be used)
     * @type {string}
     * @memberof CustomField
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomField
     */
    description?: string;
    /**
     * If true, this field is required when creating new objects or editing an existing object.
     * @type {boolean}
     * @memberof CustomField
     */
    required?: boolean;
    /**
     * 
     * @type {FilterLogic}
     * @memberof CustomField
     */
    filter_logic?: FilterLogic;
    /**
     * Default value for the field (must be a JSON value). Encapsulate strings with double quotes (e.g. \"Foo\").
     * @type {string}
     * @memberof CustomField
     */
    _default?: string | null;
    /**
     * Fields with higher weights appear lower in a form.
     * @type {number}
     * @memberof CustomField
     */
    weight?: number;
    /**
     * Minimum allowed value (for numeric fields)
     * @type {number}
     * @memberof CustomField
     */
    validation_minimum?: number | null;
    /**
     * Maximum allowed value (for numeric fields)
     * @type {number}
     * @memberof CustomField
     */
    validation_maximum?: number | null;
    /**
     * Regular expression to enforce on text field values. Use ^ and $ to force matching of entire string. For example, <code>^[A-Z]{3}$</code> will limit values to exactly three uppercase letters.
     * @type {string}
     * @memberof CustomField
     */
    validation_regex?: string;
    /**
     * Comma-separated list of available choices (for selection fields)
     * @type {Array<string>}
     * @memberof CustomField
     */
    choices?: Array<string> | null;
}


