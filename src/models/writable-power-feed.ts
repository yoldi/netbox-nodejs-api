/* tslint:disable */
/* eslint-disable */
/**
 * NetBox API
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { NestedCable } from './nested-cable';
import { NestedTag } from './nested-tag';

/**
 * 
 * @export
 * @interface WritablePowerFeed
 */
export interface WritablePowerFeed {
    /**
     * 
     * @type {number}
     * @memberof WritablePowerFeed
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    url?: string;
    /**
     * 
     * @type {number}
     * @memberof WritablePowerFeed
     */
    power_panel: number;
    /**
     * 
     * @type {number}
     * @memberof WritablePowerFeed
     */
    rack?: number | null;
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    status?: WritablePowerFeedStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    type?: WritablePowerFeedTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    supply?: WritablePowerFeedSupplyEnum;
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    phase?: WritablePowerFeedPhaseEnum;
    /**
     * 
     * @type {number}
     * @memberof WritablePowerFeed
     */
    voltage?: number;
    /**
     * 
     * @type {number}
     * @memberof WritablePowerFeed
     */
    amperage?: number;
    /**
     * Maximum permissible draw (percentage)
     * @type {number}
     * @memberof WritablePowerFeed
     */
    max_utilization?: number;
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    comments?: string;
    /**
     * 
     * @type {NestedCable}
     * @memberof WritablePowerFeed
     */
    cable?: NestedCable;
    /**
     *  Return the appropriate serializer for the cable termination model. 
     * @type {{ [key: string]: string; }}
     * @memberof WritablePowerFeed
     */
    cable_peer?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    cable_peer_type?: string;
    /**
     *  Return the appropriate serializer for the type of connected object. 
     * @type {{ [key: string]: string; }}
     * @memberof WritablePowerFeed
     */
    connected_endpoint?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    connected_endpoint_type?: string;
    /**
     * 
     * @type {boolean}
     * @memberof WritablePowerFeed
     */
    connected_endpoint_reachable?: boolean;
    /**
     * 
     * @type {Array<NestedTag>}
     * @memberof WritablePowerFeed
     */
    tags?: Array<NestedTag>;
    /**
     * 
     * @type {object}
     * @memberof WritablePowerFeed
     */
    custom_fields?: object;
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof WritablePowerFeed
     */
    last_updated?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum WritablePowerFeedStatusEnum {
    Offline = 'offline',
    Active = 'active',
    Planned = 'planned',
    Failed = 'failed'
}
/**
    * @export
    * @enum {string}
    */
export enum WritablePowerFeedTypeEnum {
    Primary = 'primary',
    Redundant = 'redundant'
}
/**
    * @export
    * @enum {string}
    */
export enum WritablePowerFeedSupplyEnum {
    Ac = 'ac',
    Dc = 'dc'
}
/**
    * @export
    * @enum {string}
    */
export enum WritablePowerFeedPhaseEnum {
    SinglePhase = 'single-phase',
    ThreePhase = 'three-phase'
}



